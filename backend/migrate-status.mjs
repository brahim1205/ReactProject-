import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function migrateStatus() {
  try {
    console.log('üîÑ Migration des donn√©es completed vers status...');

    // Migrer les t√¢ches termin√©es
    const completedTasks = await prisma.todo.findMany({
      where: { completed: true }
    });

    if (completedTasks.length > 0) {
      await prisma.todo.updateMany({
        where: { completed: true },
        data: { status: 'completed' }
      });
      console.log(`‚úÖ ${completedTasks.length} t√¢che(s) termin√©e(s) migr√©e(s)`);
    }

    // Migrer les t√¢ches non termin√©es
    const pendingTasks = await prisma.todo.findMany({
      where: { completed: false }
    });

    if (pendingTasks.length > 0) {
      await prisma.todo.updateMany({
        where: { completed: false },
        data: { status: 'in_progress' }
      });
      console.log(`‚úÖ ${pendingTasks.length} t√¢che(s) en cours migr√©e(s)`);
    }

    console.log('‚úÖ Migration termin√©e !');

  } catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error);
  } finally {
    await prisma.$disconnect();
  }
}

migrateStatus();